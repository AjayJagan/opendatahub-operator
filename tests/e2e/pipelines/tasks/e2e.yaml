---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: opendatahub-operator-e2e-test
spec:
  description: |
    An integration test which provisions an ephemeral Hypershift cluster, deploys opendatahub-operator
    bundle from a Konflux snapshot and runs the e2e tests against it.
  params:
    - description: Snapshot of the application
      name: SNAPSHOT
      default: '{"components": [{"name":"odh-operator", "containerImage": "quay.io/AjayJagan/opendatahub-operator:latest"}]}'
      type: string
    - name: NAMESPACE
      type: string
      default: opendatahub-operator-system
  tasks:
    - name: parse-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/integration-examples
          - name: revision
            value: main
          - name: pathInRepo
            value: tasks/test_metadata.yaml
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
    - name: provision-eaas-space
      runAfter:
        - parse-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/build-definitions.git
          - name: revision
            value: main
          - name: pathInRepo
            value: task/eaas-provision-space/0.1/eaas-provision-space.yaml
      params:
        - name: ownerName
          value: $(context.pipelineRun.name)
        - name: ownerUid
          value: $(context.pipelineRun.uid)
    - name: provision-cluster
      runAfter:
        - provision-eaas-space
      taskSpec:
        results:
          - name: clusterName
            value: "$(steps.create-cluster.results.clusterName)"
        steps:
          - name: get-supported-versions
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-supported-ephemeral-cluster-versions/0.1/eaas-get-supported-ephemeral-cluster-versions.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
          - name: pick-version
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-latest-openshift-version-by-prefix/0.1/eaas-get-latest-openshift-version-by-prefix.yaml
            params:
              - name: prefix
                value: "$(steps.get-supported-versions.results.versions[0])."
          - name: create-cluster
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-create-ephemeral-cluster-hypershift-aws/0.1/eaas-create-ephemeral-cluster-hypershift-aws.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
              - name: version
                value: "$(steps.pick-version.results.version)"
              - name: instanceType
                value: m5.2xlarge
    - name: deploy-and-test
      runAfter:
        - provision-cluster
      params:
      - name: git-url
        value: "$(tasks.parse-metadata.results.source-git-url)"
      - name: git-rev
        value: "$(tasks.parse-metadata.results.target-git-branch)"
      - name: namespace
        value: "$(params.NAMESPACE)"
      - name: operator-image
        value: "$(tasks.parse-metadata.results.component-container-image)"
      taskSpec:
        params:
          - name: git-url
            type: string
          - name: git-rev
            type: string
          - name: namespace
            type: string
          - name: operator-image
            type: string
        volumes:
          - name: credentials
            emptyDir: {}
        steps:
          - name: get-kubeconfig
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-ephemeral-cluster-credentials/0.1/eaas-get-ephemeral-cluster-credentials.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
              - name: clusterName
                value: "$(tasks.provision-cluster.results.clusterName)"
              - name: credentials
                value: credentials

          - name: clone-repo
            image: alpine/git
            script: |
              echo $(params.git-url)
              echo $(params.git-rev)
              git clone --depth 1 --branch $(params.git-rev) $(params.git-url) /workspace/source
              git config --global --add safe.directory /workspace/source
              cd /workspace/source

          - name: deploy-and-e2e
            image: golang:1.23-alpine
            env:
              - name: KUBECONFIG
                value: "/credentials/$(steps.get-kubeconfig.results.kubeconfig)"
            workingDir: /workspace/source
            volumeMounts:
              - name: credentials
                mountPath: /credentials
            script: |
              apk add --no-cache bash make git curl \
              && curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" \
              && install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl \
              && rm kubectl
              # Print the operator image being installed
              echo "Installing operator image: $(params.operator-image)"
              # Deploy the operator
              make deploy IMG=$(params.operator-image) OPERATOR_NAMESPACE=$(params.namespace)
              # Wait for operator to be ready
              kubectl wait --for=condition=available --timeout=30s deployment/opendatahub-operator-controller-manager -n $(params.namespace)
              # Run e2e tests
              make e2e-test -e E2E_TEST_OPERATOR_NAMESPACE=$(params.namespace)
